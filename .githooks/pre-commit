#!/bin/bash
# Pre-commit hook to run GitHub Actions checks locally
# This ensures all commits pass CI checks before being committed

set -e

echo "🚀 Running pre-commit checks (matching GitHub Actions CI)..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to print status
print_status() {
    echo -e "${GREEN}✅ $1${NC}"
}

print_error() {
    echo -e "${RED}❌ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}⚠️  $1${NC}"
}

# Check if we're in a Rust project
if [ ! -f "Cargo.toml" ]; then
    print_error "Not in a Rust project directory"
    exit 1
fi

echo "📋 Running the same checks as GitHub Actions CI..."

# 1. Check formatting (exactly as in CI)
echo "🔍 Check formatting..."
if cargo fmt -- --check; then
    print_status "Code formatting is correct"
else
    print_error "Code formatting check failed"
    echo "Run 'cargo fmt' to fix formatting issues"
    exit 1
fi

# 2. Run clippy (exactly as in CI: -D warnings)
echo "🔍 Run clippy..."
if cargo clippy -- -D warnings; then
    print_status "Clippy checks passed"
else
    print_error "Clippy check failed"
    echo "Fix clippy warnings before committing"
    exit 1
fi

# 3. Run tests (exactly as in CI)
echo "🔍 Run tests..."
if cargo test --verbose; then
    print_status "All tests passed"
else
    print_error "Tests failed"
    echo "Fix failing tests before committing"
    exit 1
fi

# 4. Build (exactly as in CI: --verbose --release)
echo "🔍 Build..."
if cargo build --verbose --release; then
    print_status "Project builds successfully"
else
    print_error "Build failed"
    echo "Fix build errors before committing"
    exit 1
fi

# 5. Run security audit (exactly as in CI)
echo "🔍 Run security audit..."
if command -v cargo-audit &> /dev/null; then
    if cargo audit; then
        print_status "Security audit passed"
    else
        print_error "Security audit found issues"
        echo "Fix security audit issues before committing"
        exit 1
    fi
else
    print_warning "cargo-audit not installed, installing..."
    cargo install cargo-audit
    if cargo audit; then
        print_status "Security audit passed"
    else
        print_error "Security audit found issues"
        echo "Fix security audit issues before committing"
        exit 1
    fi
fi

print_status "All pre-commit checks passed!"
echo "🎉 Ready to commit! (All GitHub Actions checks will pass)"